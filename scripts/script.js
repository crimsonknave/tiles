// Generated by CoffeeScript 1.6.3
(function() {
  var $, Board, build_map, fisherYates;

  $ = require('./jquery-1.10.2');

  fisherYates = require('./fisher');

  Board = require('./board');

  $(document).ready(function() {
    $('.save').click(function() {
      var canvas, image;
      canvas = document.getElementById('my_canvas');
      image = canvas.toDataURL('map.png').replace('image/png', 'image/octet-stream');
      if (!this.lnk) {
        this.lnk = document.createElement('a');
      }
      this.lnk.download = 'map.png';
      this.lnk.href = image;
      return this.lnk.click();
    });
    return $('.submit').click(function() {
      var interval, size, tiles;
      size = parseInt($('.size').val());
      interval = parseInt($('.interval').val());
      tiles = {
        '4': parseInt($('.4').val()) || 0,
        '3': parseInt($('.3').val()) || 0,
        '2-straight': parseInt($('.2-straight').val()) || 0,
        '2-turn': parseInt($('.2-turn').val()) || 0,
        '1': parseInt($('.1').val()) || 0
      };
      return build_map(tiles, size, interval);
    });
  });

  build_map = function(tiles, size, interval) {
    var canvas, context, stopping;
    canvas = document.getElementById('my_canvas');
    context = canvas.getContext('2d');
    if (this.board) {
      this.board.stop_placing = true;
    }
    return stopping = setInterval((function() {
      var colors, number_of_colors, selected_colors;
      if (this.board && this.board.running) {

      } else {
        context.clearRect(0, 0, 2057, 2057);
        number_of_colors = $('select.colors').val();
        colors = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth'];
        selected_colors = colors.slice(0, number_of_colors);
        this.board = new Board(context, size, tiles, selected_colors, interval);
        this.board.add_start_tile();
        this.board.lay_tiles();
        return clearInterval(stopping);
      }
    }), 10);
  };

}).call(this);
