// Generated by CoffeeScript 1.6.3
(function() {
  var Board;

  Board = (function() {
    function Board(context, size) {
      this.context = context;
      this.size = size;
      this.tiles = {};
      this.count = 0;
      this.last_was_placeable = true;
      this.unplaceable = [];
      if (this.size === 60) {
        this.x = 16;
        this.y = 16;
      } else {
        this.x = 8;
        this.y = 8;
      }
    }

    Board.prototype.add_start_tile = function() {
      var start_tile;
      start_tile = new Tile('images/start.png', 0, 0, true, true, true, true, this.size);
      return this.add_tile(start_tile);
    };

    Board.prototype.add_tile = function(tile) {
      var obj;
      if (this.tile_at(tile.x, tile.y)) {
        return false;
      }
      if (this.tiles[tile.x]) {
        obj = this.tiles[tile.x];
        obj[tile.y] = tile;
      } else {
        obj = {};
        obj[tile.y] = tile;
        this.tiles[tile.x] = obj;
      }
      this.count += 1;
      return tile.draw(this.context);
    };

    Board.prototype.wall_at = function(x, y) {
      return Math.abs(x) > this.x || Math.abs(y) > this.y;
    };

    Board.prototype.tile_at = function(x, y) {
      var exists, ys;
      exists = false;
      ys = this.tiles[x];
      if (ys) {
        exists = ys[y];
      }
      return exists;
    };

    Board.prototype.tile_count = function() {
      return this.count;
    };

    Board.prototype.find_valid_openings = function() {
      var coords, openings, tile, tiles, x, y, _ref;
      openings = [];
      _ref = this.tiles;
      for (x in _ref) {
        tiles = _ref[x];
        for (y in tiles) {
          tile = tiles[y];
          if (tile.north) {
            coords = [tile.x, tile.y + 1];
            if (!(this.tile_at.apply(this, coords) || this.wall_at.apply(this, coords))) {
              openings.push(coords);
            }
          }
          if (tile.east) {
            coords = [tile.x + 1, tile.y];
            if (!(this.tile_at.apply(this, coords) || this.wall_at.apply(this, coords))) {
              openings.push(coords);
            }
          }
          if (tile.south) {
            coords = [tile.x, tile.y - 1];
            if (!(this.tile_at.apply(this, coords) || this.wall_at.apply(this, coords))) {
              openings.push(coords);
            }
          }
          if (tile.west) {
            coords = [tile.x - 1, tile.y];
            if (!(this.tile_at.apply(this, coords) || this.wall_at.apply(this, coords))) {
              openings.push(coords);
            }
          }
        }
      }
      return openings;
    };

    return Board;

  })();

}).call(this);
